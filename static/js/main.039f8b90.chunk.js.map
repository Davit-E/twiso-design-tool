{"version":3,"sources":["containers/Navigation/Navigation.module.css","containers/Navigation/ShapeDropdown/ShapeDropdown.module.css","containers/Navigation/ImageDropdown/ImageDropdown.module.css","App.module.css","containers/DesignTool/DesignTool.module.css","containers/Canvas/Canvas.module.css","assets/backArrow.svg","assets/addText.svg","assets/addImage.svg","assets/addShape.svg","contexts/AppContext.js","assets/square.svg","assets/roundedSquare.svg","assets/circle.svg","assets/triangle.svg","assets/line.svg","containers/Navigation/ShapeDropdown/ShapeDropdown.js","containers/Navigation/ImageDropdown/ImageDropdown.js","assets/photo.jpg","containers/Navigation/Navigation.js","containers/Canvas/guidelines.js","containers/Canvas/util.js","assets/ctrlScale.svg","assets/ctrlStretch.svg","assets/ctrlRotate.svg","containers/Canvas/fabricConfig.js","containers/Canvas/Canvas.js","containers/DesignTool/DesignTool.js","hooks/useAppState.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","AppContext","createContext","ShapeDropdown","close","appDispatch","useContext","className","styles","Dropdown","onClick","e","target","tagName","type","data","classList","contains","ShapeContainer","childNodes","Shape","src","square","alt","roundedSquare","circle","triangle","line","ImageDropdown","setUserFiles","userFiles","fileInput","useRef","oddArr","filter","_","i","evenArr","ImageContainer","UplaodButtonContainer","current","click","UploadButton","accept","FileInput","ref","onChange","files","file","prevSate","URL","createObjectURL","Images","Column","map","el","Image","Navigation","useState","isShapeDropdown","setIsShapeDropdown","isImageDropdown","setisImageDropdown","photo","addShapeClickedHandler","prevState","addImageClickedHandler","BackFileInfoContainer","BackArrow","backArrow","FileInfoContainer","FileName","Creater","DesignControlsContainer","AddTextContainer","addText","HoverContent","HoverTriangle","HoverText","AddImageContainer","addImage","AddShapeContainer","addShape","DownloadUserInfoContainer","DownloadButton","User","UserInitials","centeringGuidelines","canvas","viewportTransform","canvasWidth","getWidth","canvasHeight","getHeight","canvasWidthCenter","canvasHeightCenter","canvasWidthCenterMap","canvasHeightCenterMap","ctx","getSelectionContext","len","Math","round","isInVerticalCenter","isInHorizontalCenter","showCenterLine","x1","y1","x2","y2","save","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","restore","on","object","objectCenter","getCenterPoint","_currentTransform","x","y","setPositionByOrigin","fabric","Point","clearContext","contextTop","renderAll","ShowControls","tl","tr","bl","br","ml","mt","mr","mb","mtr","loadAndUse","text","font","WebFont","load","google","families","timeout","fontactive","familyName","fvd","set","fontFamily","requestRenderAll","handleSelected","options","dispatch","currentObj","newTextState","forEach","property","Object","prototype","transparentCorners","cornerColor","borderColor","cornerStrokeColor","cornerStyle","ctrlStretchImage","ctrlStretch","ctrlScaleImage","ctrlScale","ctrlRotateImage","ctrlRotate","controlsUtils","scaleSkewStyleHandler","scaleSkewCursorStyleHandler","scaleStyleHandler","scaleCursorStyleHandler","scalingEqually","scalingYOrSkewingX","scalingXOrSkewingY","scaleOrSkewActionName","objectControls","controls","renderIcon","icon","left","top","styleOverride","fabricObject","size","this","cornerSize","translate","rotate","util","degreesToRadians","angle","drawImage","renderStretchIcon","Control","cursorStyleHandler","actionHandler","getActionName","offsetY","render","offsetX","rotationWithSnapping","rotationStyleHandler","withConnection","actionName","Textbox","textBoxControls","changeWidth","fabricConfig","Canvas","appState","setCanvas","isCanvasSet","setIsCanvasSet","canvasContainer","initCanvas","useCallback","width","height","fabricCanvas","backgroundColor","zoom","drawHorizontalLine","coords","drawLine","isInRange","value1","value2","verticalLines","horizontalLines","getZoom","activeObject","canvasObjects","getObjects","activeObjectCenter","activeObjectLeft","activeObjectTop","activeObjectBoundingRect","getBoundingRect","activeObjectHeight","activeObjectWidth","horizontalInTheRange","verticalInTheRange","length","objectLeft","objectTop","objectBoundingRect","objectHeight","objectWidth","push","aligningGuidelines","useEffect","shapeToAdd","item","loadSVGFromURL","objects","obj","groupSVGElements","scaleToWidth","setControlsVisibility","add","setActiveObject","handleSvg","imageToAdd","fromURL","img","handleImage","shouldAddText","state","padding","textState","addNewText","currentObject","shouldUpdateText","_clearCache","entries","key","value","updateTextStyle","canvasJSON","JSON","stringify","sessionStorage","setItem","keyDownHandler","keyCode","getActiveObjects","remove","discardActiveObject","document","addEventListener","removeEventListener","style","id","DesignTool","initialState","isSelection","shapeState","fill","opacity","imageState","cornerRadius","fontStyle","fontWeight","fontSize","textAlign","reducer","action","weight","useAppState","useReducer","App","console","log","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.039f8b90.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"Navigation_Navigation__1ARCj\",\"BackFileInfoContainer\":\"Navigation_BackFileInfoContainer__3RzYd\",\"BackArrow\":\"Navigation_BackArrow__2ywmz\",\"FileInfoContainer\":\"Navigation_FileInfoContainer__1iUS2\",\"FileName\":\"Navigation_FileName__OSsvc\",\"Creater\":\"Navigation_Creater__2qNVm\",\"DesignControlsContainer\":\"Navigation_DesignControlsContainer__2zYHN\",\"AddTextContainer\":\"Navigation_AddTextContainer__Jx-wm\",\"AddImageContainer\":\"Navigation_AddImageContainer__LeFuc\",\"AddShapeContainer\":\"Navigation_AddShapeContainer__1Z0jn\",\"HoverContent\":\"Navigation_HoverContent__3omOO\",\"HoverTriangle\":\"Navigation_HoverTriangle__2Oj00\",\"HoverText\":\"Navigation_HoverText__3odoJ\",\"DownloadUserInfoContainer\":\"Navigation_DownloadUserInfoContainer__16w6Z\",\"DownloadButton\":\"Navigation_DownloadButton__265z-\",\"User\":\"Navigation_User__QI2lq\",\"UserInitials\":\"Navigation_UserInitials__2SK1Q\",\"ShapeDropdown\":\"Navigation_ShapeDropdown__3s3DK\",\"ImageDropdown\":\"Navigation_ImageDropdown__2CW9G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dropdown\":\"ShapeDropdown_Dropdown__1Wu2K\",\"ShapeContainer\":\"ShapeDropdown_ShapeContainer__3VgGc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dropdown\":\"ImageDropdown_Dropdown__2EQf8\",\"UplaodButtonContainer\":\"ImageDropdown_UplaodButtonContainer__2qY4A\",\"UploadButton\":\"ImageDropdown_UploadButton__GnKEE\",\"FileInput\":\"ImageDropdown_FileInput__1QWbM\",\"Images\":\"ImageDropdown_Images__NrC9F\",\"Column\":\"ImageDropdown_Column__1AEok\",\"ImageContainer\":\"ImageDropdown_ImageContainer__1hRSW\",\"Image\":\"ImageDropdown_Image__2-BlT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1HEAh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DesignTool\":\"DesignTool_DesignTool__2M4FJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Canvas\":\"Canvas_Canvas__3kg3j\"};","export default __webpack_public_path__ + \"static/media/backArrow.0fa2b863.svg\";","export default __webpack_public_path__ + \"static/media/addText.3a1cc6fe.svg\";","export default __webpack_public_path__ + \"static/media/addImage.5167341a.svg\";","export default __webpack_public_path__ + \"static/media/addShape.efc88c00.svg\";","import {createContext} from 'react';\r\n\r\nconst AppContext = createContext(null);\r\nexport default AppContext;","export default __webpack_public_path__ + \"static/media/square.1a317c4f.svg\";","export default __webpack_public_path__ + \"static/media/roundedSquare.2ee5319e.svg\";","export default __webpack_public_path__ + \"static/media/circle.0bedfa10.svg\";","export default __webpack_public_path__ + \"static/media/triangle.67408d75.svg\";","export default __webpack_public_path__ + \"static/media/line.60fd0829.svg\";","import React, { useContext } from 'react';\r\nimport styles from './ShapeDropdown.module.css';\r\nimport square from '../../../assets/square.svg';\r\nimport roundedSquare from '../../../assets/roundedSquare.svg';\r\nimport circle from '../../../assets/circle.svg';\r\nimport triangle from '../../../assets/triangle.svg';\r\nimport line from '../../../assets/line.svg';\r\nimport AppContext from '../../../contexts/AppContext';\r\n\r\nconst ShapeDropdown = ({ close }) => {\r\n  const { appDispatch } = useContext(AppContext);\r\n  const clickHandler = (e) => {\r\n    if (e.target.tagName === 'IMG') {\r\n      appDispatch({ type: 'setShapeToAdd', data: e.target });\r\n      close();\r\n    }else if(e.target.classList.contains(styles.ShapeContainer)){\r\n      appDispatch({ type: 'setShapeToAdd', data: e.target.childNodes[0] });\r\n      close();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.Dropdown} onClick={clickHandler}>\r\n      <div className={styles.ShapeContainer}>\r\n        <img className={styles.Shape} src={square} alt='square' />\r\n      </div>\r\n      <div className={styles.ShapeContainer}>\r\n        <img\r\n          className={styles.Shape}\r\n          src={roundedSquare}\r\n          alt='rounded square'\r\n        />\r\n      </div>\r\n      <div className={styles.ShapeContainer}>\r\n        <img className={styles.Shape} src={circle} alt='circle' />\r\n      </div>\r\n      <div className={styles.ShapeContainer}>\r\n        <img className={styles.Shape} src={triangle} alt='triangle' />\r\n      </div>\r\n      <div className={styles.ShapeContainer}>\r\n        <img className={styles.Shape} src={line} alt='line' />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShapeDropdown;\r\n","import React, { useContext, useRef } from 'react';\r\nimport styles from './ImageDropdown.module.css';\r\nimport AppContext from '../../../contexts/AppContext';\r\n\r\nconst ImageDropdown = ({ close, setUserFiles, userFiles }) => {\r\n  const { appDispatch } = useContext(AppContext);\r\n  const fileInput = useRef(null);\r\n  const clickHandler = (e) => {\r\n    if (e.target.tagName === 'IMG') {\r\n      appDispatch({ type: 'setImageToAdd', data: e.target });\r\n      close();\r\n    } else if (e.target.classList.contains(styles.ImageContainer)) {\r\n      appDispatch({ type: 'setImageToAdd', data: e.target.childNodes[0] });\r\n      close();\r\n    }\r\n  };\r\n  const inputChangeHandler = () => {\r\n    if (fileInput.current.files[0]) {\r\n      let file = fileInput.current.files[0];\r\n      setUserFiles((prevSate) => [URL.createObjectURL(file), ...prevSate]);\r\n    }\r\n  };\r\n\r\n  const uploadClickHandler = () => {\r\n    fileInput.current.click();\r\n  };\r\n\r\n  const oddArr = userFiles.filter((_, i) => (i + 1) % 2 !== 0);\r\n  const evenArr = userFiles.filter((_, i) => (i + 1) % 2 === 0);\r\n\r\n  return (\r\n    <div className={styles.Dropdown} onClick={clickHandler}>\r\n      <div className={styles.UplaodButtonContainer}>\r\n        <button onClick={uploadClickHandler} className={styles.UploadButton}>\r\n          Upload image\r\n        </button>\r\n        <input\r\n          accept='image/png, image/gif, image/jpeg'\r\n          className={styles.FileInput}\r\n          ref={fileInput}\r\n          type='file'\r\n          onChange={inputChangeHandler}\r\n        />\r\n      </div>\r\n\r\n      <div className={styles.Images}>\r\n        <div className={styles.Column}>\r\n          {oddArr.map((el, i) => {\r\n            return (\r\n              <div key={'odd' + i} className={styles.ImageContainer}>\r\n                <img className={styles.Image} src={el} alt='' />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className={styles.Column}>\r\n          {evenArr.map((el, i) => {\r\n            return (\r\n              <div key={'even' + i} className={styles.ImageContainer}>\r\n                <img className={styles.Image} src={el} alt='' />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageDropdown;\r\n","export default __webpack_public_path__ + \"static/media/photo.3b16c800.jpg\";","/* eslint-disable jsx-a11y/img-redundant-alt */\r\nimport React, { useContext, useState } from 'react';\r\nimport styles from './Navigation.module.css';\r\nimport backArrow from '../../assets/backArrow.svg';\r\nimport addText from '../../assets/addText.svg';\r\nimport addImage from '../../assets/addImage.svg';\r\nimport addShape from '../../assets/addShape.svg';\r\nimport AppContext from '../../contexts/AppContext';\r\nimport ShapeDropdown from './ShapeDropdown/ShapeDropdown';\r\nimport ImageDropdown from './ImageDropdown/ImageDropdown';\r\nimport photo from '../../assets/photo.jpg';\r\n\r\nconst Navigation = () => {\r\n  const { appDispatch } = useContext(AppContext);\r\n  const [isShapeDropdown, setIsShapeDropdown] = useState(false);\r\n  const [isImageDropdown, setisImageDropdown] = useState(false);\r\n  const [userFiles, setUserFiles] = useState([photo]);\r\n\r\n  const addTextHandler = () => {\r\n    appDispatch({ type: 'setShouldAddText', data: true });\r\n    setIsShapeDropdown(false);\r\n    setisImageDropdown(false);\r\n  };\r\n  \r\n  const addShapeClickedHandler = () => {\r\n    setIsShapeDropdown((prevState) => !prevState);\r\n    setisImageDropdown(false);\r\n  };\r\n\r\n  const addImageClickedHandler = () => {\r\n    setisImageDropdown((prevState) => !prevState);\r\n    setIsShapeDropdown(false);\r\n  };\r\n\r\n  return (\r\n    <header className={styles.Navigation}>\r\n      <div className={styles.BackFileInfoContainer}>\r\n        <img className={styles.BackArrow} src={backArrow} alt='back' />\r\n        <div className={styles.FileInfoContainer}>\r\n          <p className={styles.FileName}>File Name</p>\r\n          <p className={styles.Creater}>Creater name</p>\r\n        </div>\r\n      </div>\r\n      <div className={styles.DesignControlsContainer}>\r\n        <div className={styles.AddTextContainer} onClick={addTextHandler}>\r\n          <img src={addText} alt='add text' />\r\n          <div className={styles.HoverContent}>\r\n            <div className={styles.HoverTriangle}></div>\r\n            <p className={styles.HoverText}>Add text</p>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div\r\n            className={styles.AddImageContainer}\r\n            onClick={addImageClickedHandler}\r\n          >\r\n            <img src={addImage} alt='add image' />\r\n            <div className={styles.HoverContent}>\r\n              <div className={styles.HoverTriangle}></div>\r\n              <p className={styles.HoverText}>Add image</p>\r\n            </div>\r\n          </div>\r\n\r\n          {isImageDropdown ? (\r\n            <div className={styles.ImageDropdown}>\r\n              <ImageDropdown\r\n                close={addImageClickedHandler}\r\n                userFiles={userFiles}\r\n                setUserFiles={setUserFiles}\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n\r\n        <div>\r\n          <div\r\n            className={styles.AddShapeContainer}\r\n            onClick={addShapeClickedHandler}\r\n          >\r\n            <img src={addShape} alt='add shape' />\r\n            <div className={styles.HoverContent}>\r\n              <div className={styles.HoverTriangle}></div>\r\n              <p className={styles.HoverText}>Add shape</p>\r\n            </div>\r\n          </div>\r\n\r\n          {isShapeDropdown ? (\r\n            <div className={styles.ShapeDropdown}>\r\n              <ShapeDropdown close={addShapeClickedHandler} />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      <div className={styles.DownloadUserInfoContainer}>\r\n        <button className={styles.DownloadButton}>Download</button>\r\n        <div className={styles.User}>\r\n          <p className={styles.UserInitials}>DE</p>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { fabric } from 'fabric';\r\n\r\nexport const aligningGuidelines = (canvas) => {\r\n  let ctx = canvas.getSelectionContext(),\r\n    aligningLineOffset = 5,\r\n    aligningLineMargin = 4,\r\n    aligningLineWidth = 1,\r\n    aligningLineColor = 'rgba(255,0,241,0.5)',\r\n    viewportTransform,\r\n    zoom = 1;\r\n\r\n  const drawVerticalLine = (coords) => {\r\n    drawLine(\r\n      coords.x + 0.5,\r\n      coords.y1 > coords.y2 ? coords.y2 : coords.y1,\r\n      coords.x + 0.5,\r\n      coords.y2 > coords.y1 ? coords.y2 : coords.y1\r\n    );\r\n  };\r\n\r\n  const drawHorizontalLine = (coords) => {\r\n    drawLine(\r\n      coords.x1 > coords.x2 ? coords.x2 : coords.x1,\r\n      coords.y + 0.5,\r\n      coords.x2 > coords.x1 ? coords.x2 : coords.x1,\r\n      coords.y + 0.5\r\n    );\r\n  };\r\n\r\n  const drawLine = (x1, y1, x2, y2) => {\r\n    ctx.save();\r\n    ctx.lineWidth = aligningLineWidth;\r\n    ctx.strokeStyle = aligningLineColor;\r\n    ctx.beginPath();\r\n    ctx.moveTo(\r\n      (x1 + viewportTransform[4]) * zoom,\r\n      (y1 + viewportTransform[5]) * zoom\r\n    );\r\n    ctx.lineTo(\r\n      (x2 + viewportTransform[4]) * zoom,\r\n      (y2 + viewportTransform[5]) * zoom\r\n    );\r\n    ctx.stroke();\r\n    ctx.restore();\r\n  };\r\n\r\n  const isInRange = (value1, value2) => {\r\n    value1 = Math.round(value1);\r\n    value2 = Math.round(value2);\r\n    for (\r\n      let i = value1 - aligningLineMargin, len = value1 + aligningLineMargin;\r\n      i <= len;\r\n      i++\r\n    ) {\r\n      if (i === value2) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  let verticalLines = [],\r\n    horizontalLines = [];\r\n\r\n  canvas.on('mouse:down', () => {\r\n    viewportTransform = canvas.viewportTransform;\r\n    zoom = canvas.getZoom();\r\n  });\r\n\r\n  canvas.on('object:moving', (e) => {\r\n    let activeObject = e.target,\r\n      canvasObjects = canvas.getObjects(),\r\n      activeObjectCenter = activeObject.getCenterPoint(),\r\n      activeObjectLeft = activeObjectCenter.x,\r\n      activeObjectTop = activeObjectCenter.y,\r\n      activeObjectBoundingRect = activeObject.getBoundingRect(),\r\n      activeObjectHeight =\r\n        activeObjectBoundingRect.height / viewportTransform[3],\r\n      activeObjectWidth = activeObjectBoundingRect.width / viewportTransform[0],\r\n      horizontalInTheRange = false,\r\n      verticalInTheRange = false,\r\n      transform = canvas._currentTransform;\r\n\r\n    if (!transform) return;\r\n\r\n    for (let i = canvasObjects.length; i--; ) {\r\n      if (canvasObjects[i] === activeObject) continue;\r\n\r\n      let objectCenter = canvasObjects[i].getCenterPoint(),\r\n        objectLeft = objectCenter.x,\r\n        objectTop = objectCenter.y,\r\n        objectBoundingRect = canvasObjects[i].getBoundingRect(),\r\n        objectHeight = objectBoundingRect.height / viewportTransform[3],\r\n        objectWidth = objectBoundingRect.width / viewportTransform[0];\r\n\r\n      // snap by the horizontal center line\r\n      if (isInRange(objectLeft, activeObjectLeft)) {\r\n        verticalInTheRange = true;\r\n        verticalLines.push({\r\n          x: objectLeft,\r\n          y1:\r\n            objectTop < activeObjectTop\r\n              ? objectTop - objectHeight / 2 - aligningLineOffset\r\n              : objectTop + objectHeight / 2 + aligningLineOffset,\r\n          y2:\r\n            activeObjectTop > objectTop\r\n              ? activeObjectTop + activeObjectHeight / 2 + aligningLineOffset\r\n              : activeObjectTop - activeObjectHeight / 2 - aligningLineOffset,\r\n        });\r\n        activeObject.setPositionByOrigin(\r\n          new fabric.Point(objectLeft, activeObjectTop),\r\n          'center',\r\n          'center'\r\n        );\r\n      }\r\n\r\n      // snap by the left edge\r\n      if (\r\n        isInRange(\r\n          objectLeft - objectWidth / 2,\r\n          activeObjectLeft - activeObjectWidth / 2\r\n        )\r\n      ) {\r\n        verticalInTheRange = true;\r\n        verticalLines.push({\r\n          x: objectLeft - objectWidth / 2,\r\n          y1:\r\n            objectTop < activeObjectTop\r\n              ? objectTop - objectHeight / 2 - aligningLineOffset\r\n              : objectTop + objectHeight / 2 + aligningLineOffset,\r\n          y2:\r\n            activeObjectTop > objectTop\r\n              ? activeObjectTop + activeObjectHeight / 2 + aligningLineOffset\r\n              : activeObjectTop - activeObjectHeight / 2 - aligningLineOffset,\r\n        });\r\n        activeObject.setPositionByOrigin(\r\n          new fabric.Point(\r\n            objectLeft - objectWidth / 2 + activeObjectWidth / 2,\r\n            activeObjectTop\r\n          ),\r\n          'center',\r\n          'center'\r\n        );\r\n      }\r\n\r\n      // snap by the right edge\r\n      if (\r\n        isInRange(\r\n          objectLeft + objectWidth / 2,\r\n          activeObjectLeft + activeObjectWidth / 2\r\n        )\r\n      ) {\r\n        verticalInTheRange = true;\r\n        verticalLines.push({\r\n          x: objectLeft + objectWidth / 2,\r\n          y1:\r\n            objectTop < activeObjectTop\r\n              ? objectTop - objectHeight / 2 - aligningLineOffset\r\n              : objectTop + objectHeight / 2 + aligningLineOffset,\r\n          y2:\r\n            activeObjectTop > objectTop\r\n              ? activeObjectTop + activeObjectHeight / 2 + aligningLineOffset\r\n              : activeObjectTop - activeObjectHeight / 2 - aligningLineOffset,\r\n        });\r\n        activeObject.setPositionByOrigin(\r\n          new fabric.Point(\r\n            objectLeft + objectWidth / 2 - activeObjectWidth / 2,\r\n            activeObjectTop\r\n          ),\r\n          'center',\r\n          'center'\r\n        );\r\n      }\r\n\r\n      // snap by the vertical center line\r\n      if (isInRange(objectTop, activeObjectTop)) {\r\n        horizontalInTheRange = true;\r\n        horizontalLines.push({\r\n          y: objectTop,\r\n          x1:\r\n            objectLeft < activeObjectLeft\r\n              ? objectLeft - objectWidth / 2 - aligningLineOffset\r\n              : objectLeft + objectWidth / 2 + aligningLineOffset,\r\n          x2:\r\n            activeObjectLeft > objectLeft\r\n              ? activeObjectLeft + activeObjectWidth / 2 + aligningLineOffset\r\n              : activeObjectLeft - activeObjectWidth / 2 - aligningLineOffset,\r\n        });\r\n        activeObject.setPositionByOrigin(\r\n          new fabric.Point(activeObjectLeft, objectTop),\r\n          'center',\r\n          'center'\r\n        );\r\n      }\r\n\r\n      // snap by the top edge\r\n      if (\r\n        isInRange(\r\n          objectTop - objectHeight / 2,\r\n          activeObjectTop - activeObjectHeight / 2\r\n        )\r\n      ) {\r\n        horizontalInTheRange = true;\r\n        horizontalLines.push({\r\n          y: objectTop - objectHeight / 2,\r\n          x1:\r\n            objectLeft < activeObjectLeft\r\n              ? objectLeft - objectWidth / 2 - aligningLineOffset\r\n              : objectLeft + objectWidth / 2 + aligningLineOffset,\r\n          x2:\r\n            activeObjectLeft > objectLeft\r\n              ? activeObjectLeft + activeObjectWidth / 2 + aligningLineOffset\r\n              : activeObjectLeft - activeObjectWidth / 2 - aligningLineOffset,\r\n        });\r\n        activeObject.setPositionByOrigin(\r\n          new fabric.Point(\r\n            activeObjectLeft,\r\n            objectTop - objectHeight / 2 + activeObjectHeight / 2\r\n          ),\r\n          'center',\r\n          'center'\r\n        );\r\n      }\r\n\r\n      // snap by the bottom edge\r\n      if (\r\n        isInRange(\r\n          objectTop + objectHeight / 2,\r\n          activeObjectTop + activeObjectHeight / 2\r\n        )\r\n      ) {\r\n        horizontalInTheRange = true;\r\n        horizontalLines.push({\r\n          y: objectTop + objectHeight / 2,\r\n          x1:\r\n            objectLeft < activeObjectLeft\r\n              ? objectLeft - objectWidth / 2 - aligningLineOffset\r\n              : objectLeft + objectWidth / 2 + aligningLineOffset,\r\n          x2:\r\n            activeObjectLeft > objectLeft\r\n              ? activeObjectLeft + activeObjectWidth / 2 + aligningLineOffset\r\n              : activeObjectLeft - activeObjectWidth / 2 - aligningLineOffset,\r\n        });\r\n        activeObject.setPositionByOrigin(\r\n          new fabric.Point(\r\n            activeObjectLeft,\r\n            objectTop + objectHeight / 2 - activeObjectHeight / 2\r\n          ),\r\n          'center',\r\n          'center'\r\n        );\r\n      }\r\n    }\r\n\r\n    if (!horizontalInTheRange) {\r\n      horizontalLines.length = 0;\r\n    }\r\n\r\n    if (!verticalInTheRange) {\r\n      verticalLines.length = 0;\r\n    }\r\n  });\r\n\r\n  canvas.on('before:render', () => {\r\n    canvas.clearContext(canvas.contextTop);\r\n  });\r\n\r\n  canvas.on('after:render', () => {\r\n    for (let i = verticalLines.length; i--; ) {\r\n      drawVerticalLine(verticalLines[i]);\r\n    }\r\n    for (let i = horizontalLines.length; i--; ) {\r\n      drawHorizontalLine(horizontalLines[i]);\r\n    }\r\n\r\n    verticalLines.length = horizontalLines.length = 0;\r\n  });\r\n\r\n  canvas.on('mouse:up', () => {\r\n    verticalLines.length = horizontalLines.length = 0;\r\n    canvas.renderAll();\r\n  });\r\n};\r\n\r\n\r\nexport const centeringGuidelines = (canvas) => {\r\n  let canvasWidth = canvas.getWidth(),\r\n    canvasHeight = canvas.getHeight(),\r\n    canvasWidthCenter = canvasWidth / 2,\r\n    canvasHeightCenter = canvasHeight / 2,\r\n    canvasWidthCenterMap = {},\r\n    canvasHeightCenterMap = {},\r\n    centerLineMargin = 4,\r\n    centerLineColor = 'rgba(255,0,241,0.5)',\r\n    centerLineWidth = 1,\r\n    ctx = canvas.getSelectionContext(),\r\n    viewportTransform;\r\n\r\n  for (\r\n    let i = canvasWidthCenter - centerLineMargin,\r\n      len = canvasWidthCenter + centerLineMargin;\r\n    i <= len;\r\n    i++\r\n  ) {\r\n    canvasWidthCenterMap[Math.round(i)] = true;\r\n  }\r\n  for (\r\n    let i = canvasHeightCenter - centerLineMargin,\r\n      len = canvasHeightCenter + centerLineMargin;\r\n    i <= len;\r\n    i++\r\n  ) {\r\n    canvasHeightCenterMap[Math.round(i)] = true;\r\n  }\r\n\r\n  const showVerticalCenterLine = () => {\r\n    showCenterLine(\r\n      canvasWidthCenter + 0.5,\r\n      0,\r\n      canvasWidthCenter + 0.5,\r\n      canvasHeight\r\n    );\r\n  };\r\n\r\n  const showHorizontalCenterLine = () => {\r\n    showCenterLine(\r\n      0,\r\n      canvasHeightCenter + 0.5,\r\n      canvasWidth,\r\n      canvasHeightCenter + 0.5\r\n    );\r\n  };\r\n\r\n  const showCenterLine = (x1, y1, x2, y2) => {\r\n    ctx.save();\r\n    ctx.strokeStyle = centerLineColor;\r\n    ctx.lineWidth = centerLineWidth;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x1 * viewportTransform[0], y1 * viewportTransform[3]);\r\n    ctx.lineTo(x2 * viewportTransform[0], y2 * viewportTransform[3]);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n  };\r\n\r\n  let isInVerticalCenter, isInHorizontalCenter;\r\n\r\n  canvas.on('mouse:down', () => {\r\n    viewportTransform = canvas.viewportTransform;\r\n  });\r\n\r\n  canvas.on('object:moving', (e) => {\r\n    let object = e.target,\r\n      objectCenter = object.getCenterPoint(),\r\n      transform = canvas._currentTransform;\r\n\r\n    if (!transform) return;\r\n\r\n    isInVerticalCenter = Math.round(objectCenter.x) in canvasWidthCenterMap;\r\n    isInHorizontalCenter = Math.round(objectCenter.y) in canvasHeightCenterMap;\r\n\r\n    if (isInHorizontalCenter || isInVerticalCenter) {\r\n      object.setPositionByOrigin(\r\n        new fabric.Point(\r\n          isInVerticalCenter ? canvasWidthCenter : objectCenter.x,\r\n          isInHorizontalCenter ? canvasHeightCenter : objectCenter.y\r\n        ),\r\n        'center',\r\n        'center'\r\n      );\r\n    }\r\n  });\r\n\r\n  canvas.on('before:render', () => {\r\n    canvas.clearContext(canvas.contextTop);\r\n  });\r\n\r\n  canvas.on('after:render', () => {\r\n    if (isInVerticalCenter) {\r\n      showVerticalCenterLine();\r\n    }\r\n    if (isInHorizontalCenter) {\r\n      showHorizontalCenterLine();\r\n    }\r\n  });\r\n\r\n  canvas.on('mouse:up', () => {\r\n    isInVerticalCenter = isInHorizontalCenter = null;\r\n    canvas.renderAll();\r\n  });\r\n};\r\n","import { fabric } from 'fabric';\r\nimport WebFont from 'webfontloader';\r\n\r\nconst ShowControls = {\r\n  tl: true,\r\n  tr: true,\r\n  bl: true,\r\n  br: true,\r\n  ml: true,\r\n  mt: false,\r\n  mr: true,\r\n  mb: false,\r\n  mtr: true,\r\n};\r\n\r\nexport const handleImage = (item, canvas, dispatch) => {\r\n  fabric.Image.fromURL(item.src, (img) => {\r\n    dispatch({ type: 'setImageToAdd', data: null });\r\n    img.scaleToWidth(256);\r\n    img.left = 100;\r\n    img.top = 100;\r\n    img.setControlsVisibility(ShowControls);\r\n    canvas.add(img).setActiveObject(img);\r\n    canvas.requestRenderAll();\r\n  });\r\n};\r\n\r\nexport const handleSvg = (item, canvas, dispatch) => {\r\n  fabric.loadSVGFromURL(item.src, (objects, options) => {\r\n    dispatch({ type: 'setShapeToAdd', data: null });\r\n    var obj = fabric.util.groupSVGElements(objects, options);\r\n    obj.scaleToWidth(item.width * 4);\r\n    obj.top = 100;\r\n    obj.left = 200;\r\n    obj.setControlsVisibility(ShowControls);\r\n    canvas.add(obj).setActiveObject(obj);\r\n    canvas.requestRenderAll();\r\n  });\r\n};\r\n\r\nexport const addNewText = (canvas, state, dispatch) => {\r\n  dispatch({ type: 'setShouldAddText', data: false });\r\n  const text = new fabric.Textbox('Add text', {\r\n    left: 100,\r\n    top: 100,\r\n    width: 130,\r\n    height: 100,\r\n    padding: 10,\r\n    ...state.textState,\r\n  });\r\n  text.setControlsVisibility(ShowControls);\r\n  canvas.add(text).setActiveObject(text);\r\n  canvas.requestRenderAll();\r\n};\r\n\r\nexport const loadAndUse = (canvas, text, font) => {\r\n  WebFont.load({\r\n    google: {\r\n      families: [font],\r\n    },\r\n    timeout: 5000,\r\n    fontactive: (familyName, fvd) => {\r\n      text.set({ fontFamily: familyName });\r\n      canvas.requestRenderAll();\r\n    },\r\n  });\r\n};\r\n\r\nexport const updateTextStyle = (state, canvas, dispatch) => {\r\n  if (state.currentObject.type === 'text' && state.textState) {\r\n    state.currentObject.object._clearCache();\r\n    for (const [key, value] of Object.entries(state.textState)) {\r\n      if (key !== 'fontFamily') {\r\n        state.currentObject.object.set(key, value);\r\n      }\r\n    }\r\n    loadAndUse(canvas, state.currentObject.object, state.textState.fontFamily);\r\n  }\r\n  dispatch({ type: 'setShouldUpdateText', data: false });\r\n};\r\n\r\nexport const handleSelected = (options, dispatch) => {\r\n  let currentObj = { type: '', object: null };\r\n  dispatch({ type: 'setIsSelection', data: true });\r\n  if (options.target.type === 'activeSelection') {\r\n    dispatch({ type: 'setCurrentObject', data: currentObj });\r\n    return;\r\n  }\r\n\r\n  if (options.target.type === 'textbox') {\r\n    const propertyArr = [\r\n      'fontFamily',\r\n      'fontStyle',\r\n      'fontWeight',\r\n      'opacity',\r\n      'fontSize',\r\n      'lineHeight',\r\n      'charSpacing',\r\n      'fill',\r\n      'textAlign',\r\n    ];\r\n    let newTextState = {};\r\n    propertyArr.forEach((property) => {\r\n      newTextState[property] = options.target[property];\r\n    });\r\n    dispatch({ type: 'setTextState', data: newTextState });\r\n    currentObj.type = 'text';\r\n  } else if (options.target.type === 'image') {\r\n    currentObj.type = 'image';\r\n  } else {\r\n    currentObj.type = 'shape';\r\n  }\r\n  currentObj.object = options.target;\r\n  dispatch({ type: 'setCurrentObject', data: currentObj });\r\n};\r\n","export default __webpack_public_path__ + \"static/media/ctrlScale.3fdf1e45.svg\";","export default __webpack_public_path__ + \"static/media/ctrlStretch.018481ed.svg\";","export default __webpack_public_path__ + \"static/media/ctrlRotate.8ba52be7.svg\";","import { fabric } from 'fabric';\r\nimport ctrlScale from '../../assets/ctrlScale.svg';\r\nimport ctrlStretch from '../../assets/ctrlStretch.svg';\r\nimport ctrlRotate from '../../assets/ctrlRotate.svg';\r\n\r\nconst fabricConfig = () => {\r\n  fabric.Object.prototype.transparentCorners = false;\r\n  fabric.Object.prototype.cornerColor = 'white';\r\n  fabric.Object.prototype.borderColor = '#6F7BD0';\r\n  fabric.Object.prototype.cornerStrokeColor = '#6F7BD0';\r\n  fabric.Object.prototype.cornerStyle = 'circle';\r\n\r\n  const ctrlStretchImage = new Image();\r\n  ctrlStretchImage.src = ctrlStretch;\r\n  const ctrlScaleImage = new Image();\r\n  ctrlScaleImage.src = ctrlScale;\r\n  const ctrlRotateImage = new Image();\r\n  ctrlRotateImage.src = ctrlRotate;\r\n  const controlsUtils = fabric.controlsUtils,\r\n    scaleSkewStyleHandler = controlsUtils.scaleSkewCursorStyleHandler,\r\n    scaleStyleHandler = controlsUtils.scaleCursorStyleHandler,\r\n    scalingEqually = controlsUtils.scalingEqually,\r\n    scalingYOrSkewingX = controlsUtils.scalingYOrSkewingX,\r\n    scalingXOrSkewingY = controlsUtils.scalingXOrSkewingY,\r\n    scaleOrSkewActionName = controlsUtils.scaleOrSkewActionName,\r\n    objectControls = fabric.Object.prototype.controls;\r\n\r\n  const renderIcon = (icon) => {\r\n    return function renderIcon(ctx, left, top, styleOverride, fabricObject) {\r\n      let size = this.cornerSize;\r\n      ctx.save();\r\n      ctx.translate(left, top);\r\n      ctx.rotate(fabric.util.degreesToRadians(fabricObject.angle));\r\n      ctx.drawImage(icon, -size / 2, -size / 2, size, size);\r\n      ctx.restore();\r\n    };\r\n  };\r\n\r\n  const renderStretchIcon = (icon) => {\r\n    return function renderIcon(ctx, left, top, styleOverride, fabricObject) {\r\n      let size = this.cornerSize;\r\n      ctx.save();\r\n      ctx.translate(left, top);\r\n      ctx.rotate(fabric.util.degreesToRadians(fabricObject.angle));\r\n      ctx.drawImage(icon, -size / 3.2, -size / 2, size / 1.6, size);\r\n      ctx.restore();\r\n    };\r\n  }\r\n\r\n  objectControls.ml = new fabric.Control({\r\n    x: -0.5,\r\n    y: 0,\r\n    cursorStyleHandler: scaleSkewStyleHandler,\r\n    actionHandler: scalingXOrSkewingY,\r\n    getActionName: scaleOrSkewActionName,\r\n    cornerSize: 42,\r\n    offsetY: 3,\r\n    render: renderStretchIcon(ctrlStretchImage),\r\n  });\r\n\r\n  objectControls.mr = new fabric.Control({\r\n    x: 0.5,\r\n    y: 0,\r\n    cursorStyleHandler: scaleSkewStyleHandler,\r\n    actionHandler: scalingXOrSkewingY,\r\n    getActionName: scaleOrSkewActionName,\r\n    cornerSize: 42,\r\n    offsetY: 3,\r\n    offsetX: 1,\r\n    render: renderStretchIcon(ctrlStretchImage),\r\n  });\r\n\r\n  objectControls.mb = new fabric.Control({\r\n    x: 0,\r\n    y: 0.5,\r\n    cursorStyleHandler: scaleSkewStyleHandler,\r\n    actionHandler: scalingYOrSkewingX,\r\n    getActionName: scaleOrSkewActionName,\r\n  });\r\n\r\n  objectControls.mt = new fabric.Control({\r\n    x: 0,\r\n    y: -0.5,\r\n    cursorStyleHandler: scaleSkewStyleHandler,\r\n    actionHandler: scalingYOrSkewingX,\r\n    getActionName: scaleOrSkewActionName,\r\n  });\r\n\r\n  objectControls.tl = new fabric.Control({\r\n    x: -0.5,\r\n    y: -0.5,\r\n    cursorStyleHandler: scaleStyleHandler,\r\n    actionHandler: scalingEqually,\r\n    cornerSize: 32,\r\n    offsetY: 3,\r\n    offsetX: 1,\r\n    render: renderIcon(ctrlScaleImage),\r\n  });\r\n\r\n  objectControls.tr = new fabric.Control({\r\n    x: 0.5,\r\n    y: -0.5,\r\n    cursorStyleHandler: scaleStyleHandler,\r\n    actionHandler: scalingEqually,\r\n    cornerSize: 32,\r\n    offsetY: 3,\r\n    offsetX: 1,\r\n    render: renderIcon(ctrlScaleImage),\r\n  });\r\n\r\n  objectControls.bl = new fabric.Control({\r\n    x: -0.5,\r\n    y: 0.5,\r\n    cursorStyleHandler: scaleStyleHandler,\r\n    actionHandler: scalingEqually,\r\n    cornerSize: 32,\r\n    offsetY: 3,\r\n    offsetX: 1,\r\n    render: renderIcon(ctrlScaleImage),\r\n  });\r\n\r\n  objectControls.br = new fabric.Control({\r\n    x: 0.5,\r\n    y: 0.5,\r\n    cursorStyleHandler: scaleStyleHandler,\r\n    actionHandler: scalingEqually,\r\n    cornerSize: 32,\r\n    offsetY: 3,\r\n    offsetX: 1,\r\n    render: renderIcon(ctrlScaleImage),\r\n  });\r\n\r\n  objectControls.mtr = new fabric.Control({\r\n    x: 0,\r\n    y: 0.5,\r\n    cornerSize: 50,\r\n    offsetY: 30,\r\n    actionHandler: controlsUtils.rotationWithSnapping,\r\n    cursorStyleHandler: controlsUtils.rotationStyleHandler,\r\n    withConnection: false,\r\n    actionName: 'rotate',\r\n    render: renderIcon(ctrlRotateImage),\r\n  });\r\n\r\n  if (fabric.Textbox) {\r\n    let textBoxControls = (fabric.Textbox.prototype.controls = {});\r\n\r\n    textBoxControls.mtr = objectControls.mtr;\r\n    textBoxControls.tr = objectControls.tr;\r\n    textBoxControls.br = objectControls.br;\r\n    textBoxControls.tl = objectControls.tl;\r\n    textBoxControls.bl = objectControls.bl;\r\n    textBoxControls.mt = objectControls.mt;\r\n    textBoxControls.mb = objectControls.mb;\r\n\r\n    textBoxControls.mr = new fabric.Control({\r\n      x: 0.5,\r\n      y: 0,\r\n      actionHandler: controlsUtils.changeWidth,\r\n      cursorStyleHandler: scaleSkewStyleHandler,\r\n      actionName: 'resizing',\r\n      cornerSize: 42,\r\n      offsetY: 3,\r\n      offsetX: 1,\r\n      render: renderStretchIcon(ctrlStretchImage),\r\n    });\r\n\r\n    textBoxControls.ml = new fabric.Control({\r\n      x: -0.5,\r\n      y: 0,\r\n      actionHandler: controlsUtils.changeWidth,\r\n      cursorStyleHandler: scaleSkewStyleHandler,\r\n      actionName: 'resizing',\r\n      cornerSize: 42,\r\n      offsetY: 3,\r\n      render: renderStretchIcon(ctrlStretchImage),\r\n    });\r\n  }\r\n};\r\n\r\nexport default fabricConfig;\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n  useRef,\r\n  useContext,\r\n} from 'react';\r\nimport styles from './Canvas.module.css';\r\nimport { fabric } from 'fabric';\r\nimport AppContext from '../../contexts/AppContext';\r\nimport { aligningGuidelines, centeringGuidelines } from './guidelines';\r\nimport {\r\n  handleImage,\r\n  handleSvg,\r\n  addNewText,\r\n  updateTextStyle,\r\n  loadAndUse,\r\n  handleSelected,\r\n} from './util';\r\nimport fabricConfig from './fabricConfig';\r\nfabricConfig();\r\n\r\nconst Canvas = () => {\r\n  const { appState, appDispatch } = useContext(AppContext);\r\n  const [canvas, setCanvas] = useState(null);\r\n  const [isCanvasSet, setIsCanvasSet] = useState(false);\r\n  const canvasContainer = useRef(null);\r\n\r\n  const initCanvas = useCallback((width, height) => {\r\n    let fabricCanvas = new fabric.Canvas('canvas', {\r\n      width: width,\r\n      height: height,\r\n      backgroundColor: '#FFFFFF',\r\n    });\r\n    centeringGuidelines(fabricCanvas);\r\n    aligningGuidelines(fabricCanvas);\r\n    return fabricCanvas;\r\n  }, []);\r\n\r\n  // Add Object Handling\r\n  useEffect(() => {\r\n    if (appState.shapeToAdd) {\r\n      handleSvg(appState.shapeToAdd, canvas, appDispatch);\r\n    } else if (appState.imageToAdd) {\r\n      handleImage(appState.imageToAdd, canvas, appDispatch);\r\n    } else if (appState.shouldAddText) {\r\n      addNewText(canvas, appState, appDispatch);\r\n    }\r\n  }, [canvas, appDispatch, appState]);\r\n\r\n  useEffect(() => {\r\n    if (appState.currentObject.type === 'text' && appState.shouldUpdateText) {\r\n      updateTextStyle(appState, canvas, appDispatch);\r\n    }\r\n  }, [appState, appDispatch, canvas]);\r\n\r\n  // If Canvas in Storage render It\r\n  useEffect(() => {\r\n    // let storageCanvas = sessionStorage.getItem('designCanvas');\r\n    let storageCanvas = null;\r\n    if (isCanvasSet && storageCanvas) {\r\n      canvas.loadFromJSON(storageCanvas);\r\n      let objects = canvas.getObjects();\r\n      let textObjects = objects.filter((obj) => {\r\n        return obj.type === 'textbox';\r\n      });\r\n      for (let i = 0; i < textObjects.length; i++) {\r\n        let text = textObjects[i];\r\n        loadAndUse(canvas, text, text.fontFamily);\r\n      }\r\n      var group = new fabric.ActiveSelection(objects, { canvas: canvas });\r\n      canvas.setActiveObject(group);\r\n      canvas.discardActiveObject();\r\n    }\r\n  }, [isCanvasSet, canvas]);\r\n\r\n  // Initialize Canvas\r\n  useEffect(() => {\r\n    setCanvas(initCanvas(appState.canvasWidth, appState.canvasHeight));\r\n    setIsCanvasSet(true);\r\n  }, [initCanvas, appState.canvasWidth, appState.canvasHeight]);\r\n\r\n  // Selection Handling\r\n  useEffect(() => {\r\n    if (isCanvasSet) {\r\n      canvas.on('selection:created', (options) => {\r\n        handleSelected(options, appDispatch);\r\n        let canvasJSON = JSON.stringify(canvas);\r\n        sessionStorage.setItem('designCanvas', canvasJSON);\r\n      });\r\n      canvas.on('selection:updated', (options) => {\r\n        handleSelected(options, appDispatch);\r\n      });\r\n      canvas.on('selection:cleared', () => {\r\n        appDispatch({\r\n          type: 'setCurrentObject',\r\n          data: { type: '', object: null },\r\n        });\r\n        appDispatch({ type: 'setIsSelection', data: false });\r\n\r\n        let canvasJSON = JSON.stringify(canvas);\r\n        sessionStorage.setItem('designCanvas', canvasJSON);\r\n      });\r\n      canvas.on('object:modified', () => {\r\n        let canvasJSON = JSON.stringify(canvas);\r\n        sessionStorage.setItem('designCanvas', canvasJSON);\r\n      });\r\n    }\r\n  }, [appDispatch, isCanvasSet, canvas]);\r\n\r\n  // Delete\r\n  const keyDownHandler = useCallback(\r\n    (e) => {\r\n      const keyCode = e.keyCode;\r\n      if (canvas && keyCode === 46) {\r\n        canvas.getActiveObjects().forEach((obj) => {\r\n          canvas.remove(obj);\r\n        });\r\n        canvas.discardActiveObject().requestRenderAll();\r\n      }\r\n    },\r\n    [canvas]\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', keyDownHandler);\r\n    return () => document.removeEventListener('keydown', keyDownHandler);\r\n  }, [keyDownHandler]);\r\n\r\n  // // Crop\r\n  // const startCropHandler = () => {\r\n  //   let el = new fabric.Rect({\r\n  //     fill: 'rgba(0,0,0,0)',\r\n  //     originX: 'left',\r\n  //     originY: 'top',\r\n  //     stroke: '#ccc',\r\n  //     strokeDashArray: [2, 2],\r\n  //     strokWidth: 5,\r\n  //     width: 1,\r\n  //     height: 1,\r\n  //     borderColor: '#36fd00',\r\n  //     selectable: true,\r\n  //   });\r\n  //   el.controls.mtr.visible = false;\r\n  //   // el.setControlsVisibility({ mtr: false });\r\n\r\n  //   canvas.getObjects().forEach((el) => {\r\n  //     el.selectable = false;\r\n  //   });\r\n  //   let activeEl = canvas.getActiveObject();\r\n  //   el.left = activeEl.left;\r\n  //   el.top = activeEl.top;\r\n  //   el.width = (activeEl.width * activeEl.scaleX) / 2;\r\n  //   el.height = (activeEl.height * activeEl.scaleY) / 2;\r\n  //   el.uniFormScaling = true;\r\n  //   canvas.add(el);\r\n  //   canvas.setActiveObject(el);\r\n  //   el.on('moving', function (e) {\r\n  //     let objectHeight = el.height * el.scaleY;\r\n  //     let objectWidth = el.width * el.scaleX;\r\n  //     let boundHeight = activeEl.height * activeEl.scaleY;\r\n  //     let boundWidth = activeEl.width * activeEl.scaleX;\r\n\r\n  //     let top = el.top;\r\n  //     let bottom = el.top + objectHeight;\r\n  //     let left = el.left;\r\n  //     let right = el.left + objectWidth;\r\n\r\n  //     let topBound = activeEl.top;\r\n  //     let bottomBound = topBound + boundHeight;\r\n  //     let leftBound = activeEl.left;\r\n  //     let rightBound = leftBound + boundWidth;\r\n  //     //left\r\n  //     if (left < leftBound) el.left = leftBound;\r\n  //     //top\r\n  //     if (top < topBound) el.top = topBound;\r\n  //     //right\r\n  //     if (right > rightBound) el.left = rightBound - objectWidth;\r\n  //     //bottom\r\n  //     if (bottom > bottomBound) el.top = bottomBound - objectHeight;\r\n  //   });\r\n\r\n  //   // canvas scaling limit\r\n  //   el.on('scaling', function (e) {\r\n  //     let objectHeight = el.height * el.scaleY;\r\n  //     let objectWidth = el.width * el.scaleX;\r\n  //     let boundHeight = activeEl.height * activeEl.scaleY;\r\n  //     let boundWidth = activeEl.width * activeEl.scaleX;\r\n\r\n  //     let top = el.top;\r\n  //     let bottom = el.top + objectHeight;\r\n  //     let left = el.left;\r\n  //     let right = el.left + objectWidth;\r\n\r\n  //     let topBound = activeEl.top;\r\n  //     let bottomBound = topBound + boundHeight;\r\n  //     let leftBound = activeEl.left;\r\n  //     let rightBound = leftBound + boundWidth;\r\n\r\n  //     //left\r\n  //     if (left < leftBound || right > rightBound) {\r\n  //       el.left = leftBound;\r\n  //       el.scaleX = boundWidth / objectWidth;\r\n  //     }\r\n  //     //top\r\n  //     if (top < topBound || bottom > bottomBound) {\r\n  //       el.top = topBound;\r\n  //       el.scaleY = boundHeight / objectHeight;\r\n  //     }\r\n  //   });\r\n  // };\r\n  // const cropImageHandler = () => {};\r\n\r\n  return (\r\n    <>\r\n      {/* {appState.currentObject.type === 'image' ? (\r\n        <>\r\n          <button onClick={startCropHandler}>Start Crop</button>\r\n          <button onClick={cropImageHandler}>Crop</button>\r\n        </>\r\n      ) : null} */}\r\n\r\n      <div\r\n        style={{\r\n          width: appState.canvasWidth + 'px',\r\n          height: appState.canvasHeight + 'px',\r\n        }}\r\n        ref={canvasContainer}\r\n        className={styles.Canvas}\r\n      >\r\n        <canvas id='canvas' />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","import React from 'react';\r\nimport styles from './DesignTool.module.css';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport Canvas from '../Canvas/Canvas';\r\n\r\nconst DesignTool = () => {\r\n  return (\r\n    <div className={styles.DesignTool}>\r\n      <Navigation />\r\n      <Canvas />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DesignTool;\r\n","import { useReducer } from 'react';\r\n\r\nconst initialState = {\r\n  canvasWidth: 526,\r\n  canvasHeight: 741,\r\n  isSelection: false,\r\n  shapeToAdd: null,\r\n  imageToAdd: null,\r\n  shapeState: {\r\n    fill: 0,\r\n    stroke: 0,\r\n    opacity: 100,\r\n  },\r\n  imageState: {\r\n    cornerRadius: 0,\r\n    opacity: 100,\r\n  },\r\n  shouldAddText: false,\r\n  shouldUpdateText: false,\r\n  currentObject: {\r\n    type: '',\r\n    object: null,\r\n  },\r\n  textState: {\r\n    fontFamily: 'Inter',\r\n    fontStyle: 'Normal',\r\n    fontWeight: 'Normal',\r\n    fontSize: 32,\r\n    fill: '#000000',\r\n    textAlign: 'left',\r\n  },\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'setCanvasSize':\r\n      return { ...state, canvasWidth: action.value };\r\n    case 'setCanvasHeight':\r\n      return { ...state, canvasHeight: action.value };\r\n    case 'setIsSelection':\r\n      return { ...state, isSelection: action.data };\r\n    case 'setShouldAddText':\r\n      return { ...state, shouldAddText: action.data };\r\n    case 'setShouldUpdateText':\r\n      return { ...state, shouldUpdateText: action.data };\r\n    case 'setShapeState':\r\n      return { ...state, shapeState: { ...action.data } };\r\n    case 'setImageState':\r\n      return { ...state, imageState: { ...action.data } };\r\n    case 'setCurrentObject':\r\n      return { ...state, currentObject: action.data };\r\n    case 'setShapeToAdd':\r\n      return { ...state, shapeToAdd: action.data };\r\n    case 'setImageToAdd':\r\n      return { ...state, imageToAdd: action.data };\r\n    case 'setTextState':\r\n      return { ...state, textState: { ...action.data } };\r\n    case 'setFontFamily':\r\n      return {\r\n        ...state,\r\n        shouldUpdateText: true,\r\n        textState: {\r\n          ...state.textState,\r\n          fontFamily: action.data,\r\n        },\r\n      };\r\n    case 'setFontStyleAndWeight':\r\n      return {\r\n        ...state,\r\n        shouldUpdateText: true,\r\n        textState: {\r\n          ...state.textState,\r\n          fontStyle: action.data.style,\r\n          fontWeight: action.data.weight,\r\n        },\r\n      };\r\n    case 'setFontSize':\r\n      return {\r\n        ...state,\r\n        shouldUpdateText: true,\r\n        textState: {\r\n          ...state.textState,\r\n          fontSize: action.data,\r\n        },\r\n      };\r\n    case 'setFill':\r\n      return {\r\n        ...state,\r\n        shouldUpdateText: true,\r\n        textState: {\r\n          ...state.textState,\r\n          fill: action.data,\r\n        },\r\n      };\r\n    case 'setTextAlign':\r\n      return {\r\n        ...state,\r\n        shouldUpdateText: true,\r\n        textState: {\r\n          ...state.textState,\r\n          textAlign: action.data,\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst useAppState = () => {\r\n  const [appState, appDispatch] = useReducer(reducer, initialState);\r\n  return [appState, appDispatch];\r\n};\r\n\r\nexport default useAppState;\r\n","import React from 'react';\nimport styles from './App.module.css';\nimport DesignTool from './containers/DesignTool/DesignTool';\nimport AppContext from './contexts/AppContext';\nimport useAppState from './hooks/useAppState';\n\nconst App = () => {\n  const [appState, appDispatch] = useAppState();\n  console.log(appState);\n\n  return (\n    <div className={styles.App}>\n      <AppContext.Provider value={{appState, appDispatch}}>\n        <DesignTool />\n      </AppContext.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}